{"version":3,"sources":["images/logo.png","components/Navbar.jsx","components/Loader.jsx","services/cryptoApi.js","components/Cryptocurrencies.jsx","services/cryptoNewsApi.js","components/News.jsx","components/Homepage.jsx","components/Exchanges.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","AliwangwangOutlined","Loader","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timeperiod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery","Cryptocurrencies","simplified","cryptosList","data","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","coin","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","id","title","rank","extra","iconUrl","hoverable","millify","price","marketCap","change","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","Text","Typography","Option","Select","demoImage","News","setNewsCategory","cryptoNews","span","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","i","href","rel","style","maxWidth","maxHeight","image","thumbnail","contentUrl","alt","description","length","substring","provider","moment","datePublished","startOf","fromNow","Homepage","globalStats","stats","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","volume","numberOfMarkets","marketShare","HTMLReactParser","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","history","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","links","link","type","App","path","element","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"qSAAe,MAA0B,iC,OC6D1BA,EAvDA,WACX,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,mBAAS,MAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAoBA,OAlBAC,qBAAU,WACN,IAAMC,EAAe,kBAAMF,EAAcG,OAAOC,aAMhD,OAJAD,OAAOE,iBAAiB,SAAUH,GAElCA,IAEO,kBAAMC,OAAOG,oBAAoB,SAAUJ,MACjD,IAEHD,qBAAU,WAENH,IADEC,GAAc,QAKjB,CAACA,IAGF,sBAAKQ,UAAU,gBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,cAAC,IAAD,CAAQC,IAAKC,EAAMC,KAAK,UACxB,cAAC,IAAWC,MAAZ,CAAkBC,MAAO,EAAGL,UAAU,OAAtC,SACI,cAAC,IAAD,CAAMM,GAAG,IAAT,+BAEJ,cAAC,IAAD,CAAQN,UAAU,yBAAyBO,QAAS,kBAAMhB,GAAeD,IAAzE,SAAsF,cAACkB,EAAA,EAAD,SAEzFlB,GACD,eAAC,IAAD,CAAMmB,MAAM,OAAZ,UACI,cAAC,IAAKC,KAAN,CAAWR,KAAM,cAACS,EAAA,EAAD,IAAjB,SACI,cAAC,IAAD,CAAML,GAAG,IAAT,oBAEJ,cAAC,IAAKI,KAAN,CAAWR,KAAM,cAACU,EAAA,EAAD,IAAjB,SACI,cAAC,IAAD,CAAMN,GAAG,oBAAT,gCAEJ,cAAC,IAAKI,KAAN,CAAWR,KAAM,cAACW,EAAA,EAAD,IAAjB,SACK,cAAC,IAAD,CAAMP,GAAG,aAAT,yBAKL,cAAC,IAAKI,KAAN,CAAWR,KAAM,cAACY,EAAA,EAAD,IAAjB,SACI,cAAC,IAAD,CAAMR,GAAG,QAAT,2B,4DC3CLS,EANA,kBACb,qBAAKf,UAAU,SAAf,SACE,cAAC,IAAD,O,iBCHEgB,EAAmB,CACrB,kBAAmB,8BACnB,iBAAkB,sDAIhBC,EAAgB,SAACC,GAAD,MAAU,CAAEA,MAAKC,QAASH,IAEnCI,EAAYC,YAAU,CAC/BC,YAAa,YACbC,UAAWC,YAAe,CAAEC,QANhB,wCAOZC,UAAW,SAACC,GAAD,MAAc,CACrBC,WAAYD,EAAQE,MAAM,CACtBA,MAAO,SAACC,GAAD,OAAWb,EAAc,gBAAD,OAAiBa,OAEpDC,aAAcJ,EAAQE,MAAM,CACxBA,MAAO,kBAAMZ,EAAc,iBAE/Be,iBAAkBL,EAAQE,MAAM,CAC5BA,MAAO,SAACI,GAAD,OAAYhB,EAAc,SAAD,OAAUgB,OAE9CC,iBAAkBP,EAAQE,MAAM,CAC5BA,MAAO,gBAAGI,EAAH,EAAGA,OAAQE,EAAX,EAAWA,WAAX,OAA4BlB,EAAc,QAAD,OAASgB,EAAT,oBAA2BE,WAKxEC,EAAiGhB,EAAjGgB,mBAAoBC,EAA6EjB,EAA7EiB,yBAA0BC,EAAmDlB,EAAnDkB,qBAAsBC,EAA6BnB,EAA7BmB,yBCsBpEC,EA1CU,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAExB,EAA0CL,EAD5BK,EAAa,EAAI,KACjBC,EAAd,EAAQC,KAAmBC,EAA3B,EAA2BA,WAC3B,EAAgCvD,mBAAS,IAAzC,mBAAQwD,EAAR,KAAiBC,EAAjB,KAEA,EAAoCzD,mBAAS,IAA7C,mBAAO0D,EAAP,KAAmBC,EAAnB,KAUA,OARAtD,qBAAU,WAAO,IAAD,EAERuD,EAAY,OAAGP,QAAH,IAAGA,GAAH,UAAGA,EAAaC,YAAhB,aAAG,EAAmBO,MAAMC,QAAO,SAACC,GAAD,OAAUA,EAAKC,KAAKC,cAAcC,SAASR,EAAWO,kBAE3GR,EAAWG,KACX,CAACP,EAAaK,IAGZH,EAAmB,cAAC,EAAD,IAGrB,sCACEH,GACF,qBAAKzC,UAAU,gBAAf,SACE,cAAC,IAAD,CAAOwD,YAAY,wBAAwBC,SAAU,SAACC,GAAD,OAAOV,EAAcU,EAAEC,OAAOC,YAGnF,cAAC,IAAD,CAAKC,OAAQ,CAAC,GAAI,IAAK7D,UAAU,wBAAjC,gBACG6C,QADH,IACGA,OADH,EACGA,EAASiB,KAAI,SAACC,GAAD,OACZ,cAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGlE,UAAU,cAAtC,SACE,cAAC,IAAD,CAAwBM,GAAE,kBAAayD,EAASI,IAAhD,SACE,eAAC,IAAD,CAAMC,MAAK,UAAKL,EAASM,KAAd,aAAuBN,EAASV,MAAQiB,MAAO,qBAAKtE,UAAU,eAAeC,IAAK8D,EAASQ,UAAaC,WAAS,EAA5H,UACE,wCAAWC,IAAQV,EAASW,UAC5B,6CAAgBD,IAAQV,EAASY,cACjC,+CAAkBZ,EAASa,OAA3B,WAJOb,EAASI,KADmCJ,EAASI,a,oCCjCxEU,EAAoB,CACtB,iBAAkB,OAClB,kBAAmB,mCACnB,iBAAkB,sDAOTC,EAAgBzD,YAAU,CACnCC,YAAa,gBACbC,UAAWC,YAAe,CAAEC,QANhB,6CAOZC,UAAW,SAACC,GAAD,MAAc,CACrBoD,cAAepD,EAAQE,MAAM,CACzBA,MAAO,gBAAEmD,EAAF,EAAEA,aAAclD,EAAhB,EAAgBA,MAAhB,MAPa,CAAEZ,IAO0B,kBAAD,OAAmB8D,EAAnB,8DAAqFlD,GAPzGX,QAAS0D,UAYjCI,EAA0BH,EAA1BG,sBCbPC,EAAgBC,IAAhBD,KAAM9E,EAAU+E,IAAV/E,MACNgF,EAAWC,IAAXD,OAEFE,EAAY,kEAoDHC,GAlDF,SAAC,GAAoB,IAAD,IAAjB9C,EAAiB,EAAjBA,WACZ,EAAwCpD,mBAAS,kBAAjD,mBAAO2F,EAAP,KAAqBQ,EAArB,KACQ7C,EAASP,EAAmB,KAA5BO,KACM8C,EAAeR,EAAsB,CAACD,eAAclD,MAAOW,EAAa,EAAI,KAAlFE,KAIR,OAAG,OAAC8C,QAAD,IAACA,OAAD,EAACA,EAAY7B,OAGb,eAAC,IAAD,CAAKC,OAAQ,CAAE,GAAI,IAAnB,WACKpB,GACA,cAAC,IAAD,CAAKiD,KAAM,GAAX,SACI,eAAC,IAAD,CACGC,YAAU,EACV3F,UAAU,cACVwD,YAAY,kBACZoC,iBAAiB,WACjBnC,SAAU,SAACG,GAAD,OAAW4B,EAAgB5B,IACrCiC,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOC,SAAS1C,cAAc2C,QAAQH,EAAMxC,gBAAkB,GANlG,UAQC,cAAC8B,EAAD,CAAQxB,MAAM,gBAAd,4BARD,OASIjB,QATJ,IASIA,GATJ,UASIA,EAAMA,YATV,iBASI,EAAYO,aAThB,aASI,EAAmBY,KAAI,SAACC,GAAD,OAAc,cAACqB,EAAD,CAAQxB,MAAOG,EAASV,KAAxB,SAA+BU,EAASV,eAIpFoC,EAAW7B,MAAME,KAAI,SAACoC,EAAMC,GAAP,uBACnB,cAAC,IAAD,CAAKnC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAzB,SACI,cAAC,IAAD,CAAMM,WAAS,EAACxE,UAAU,YAA1B,SACI,oBAAGoG,KAAMF,EAAKhF,IAAKyC,OAAO,SAAS0C,IAAI,aAAvC,UACI,sBAAKrG,UAAU,uBAAf,UACI,cAACI,EAAD,CAAOJ,UAAU,aAAaK,MAAO,EAArC,SAAyC6F,EAAK7C,OAC9C,qBAAKiD,MAAO,CAAEC,SAAU,QAASC,UAAW,SAAUvG,KAAS,OAAJiG,QAAI,IAAJA,GAAA,UAAAA,EAAMO,aAAN,mBAAaC,iBAAb,eAAwBC,aAAcrB,EAAWsB,IAAI,QAEpH,4BAAIV,EAAKW,YAAYC,OAAS,IAA1B,UAAmCZ,EAAKW,YAAYE,UAAU,EAAG,KAAjE,OAA6Eb,EAAKW,cACtF,sBAAK7G,UAAU,qBAAf,UACI,gCACI,cAAC,IAAD,CAAQC,KAAK,UAAAiG,EAAKc,SAAS,UAAd,mBAAkBP,aAAlB,mBAAyBC,iBAAzB,eAAoCC,aAAcrB,EAAWsB,IAAI,KAC9E,cAAC1B,EAAD,CAAMlF,UAAU,gBAAhB,mBAAiCkG,EAAKc,SAAS,UAA/C,aAAiC,EAAkB3D,UAEtD,cAAC6B,EAAD,UAAO+B,IAAOf,EAAKgB,eAAeC,QAAQ,MAAMC,qBAbhCjB,SApBd,cAAC,EAAD,KCV1B/F,GAAU+E,IAAV/E,MAmCOiH,GAjCE,WAAO,IAAD,EACrB,EAA6BjF,EAAmB,GAAxCO,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WAER0E,EAAW,OAAG3E,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAY4E,MAGhC,OAAI3E,EAAmB,cAAC,EAAD,IAGvB,qCACE,cAAC,GAAD,CAAOvC,MAAO,EAAGL,UAAU,UAA3B,iCACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAK0F,KAAM,GAAX,SAAe,cAAC,IAAD,CAAWtB,MAAM,yBAAyBR,MAAO0D,EAAYE,UAC5E,cAAC,IAAD,CAAK9B,KAAM,GAAX,SAAe,cAAC,IAAD,CAAWtB,MAAM,kBAAkBR,MAAOa,IAAQ6C,EAAYG,oBAC7E,cAAC,IAAD,CAAK/B,KAAM,GAAX,SAAe,cAAC,IAAD,CAAWtB,MAAM,oBAAoBR,MAAK,WAAMa,IAAQ6C,EAAYI,qBACnF,cAAC,IAAD,CAAKhC,KAAM,GAAX,SAAe,cAAC,IAAD,CAAWtB,MAAM,mBAAmBR,MAAK,WAAMa,IAAQ6C,EAAYK,qBAClF,cAAC,IAAD,CAAKjC,KAAM,GAAX,SAAe,cAAC,IAAD,CAAWtB,MAAM,yBAAyBR,MAAO0D,EAAYE,UAC5E,cAAC,IAAD,CAAK9B,KAAM,GAAX,SAAe,cAAC,IAAD,CAAWtB,MAAM,gBAAgBR,MAAOa,IAAQ6C,EAAYM,qBAE7E,sBAAK5H,UAAU,yBAAf,UACE,cAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,aAA3B,wCACA,cAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,YAA3B,SAAuC,cAAC,IAAD,CAAMM,GAAG,oBAAT,4BAEzC,cAAC,EAAD,CAAkBmC,YAAU,IAC5B,sBAAKzC,UAAU,yBAAf,UACE,cAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,aAA3B,gCACA,cAAC,GAAD,CAAOK,MAAO,EAAd,SAAiB,cAAC,IAAD,CAAMC,GAAG,QAAT,4BAEnB,cAAC,GAAD,CAAMmC,YAAU,Q,oBCjCZyC,GAASC,IAATD,KACA2C,GAAUC,KAAVD,MA+COE,GA7CG,WAAO,IAAD,EACtB,EAA6BzF,IAArBK,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WACRoF,EAAa,OAAGrF,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAYsF,UAGlC,OAAIrF,EAAmB,cAAC,EAAD,IAGrB,qCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAK8C,KAAM,EAAX,uBACA,cAAC,IAAD,CAAKA,KAAM,EAAX,8BACA,cAAC,IAAD,CAAKA,KAAM,EAAX,qBACA,cAAC,IAAD,CAAKA,KAAM,EAAX,uBAEF,cAAC,IAAD,UACGsC,EAAclE,KAAI,SAACoE,GAAD,OACjB,cAAC,IAAD,CAAKxC,KAAM,GAAX,SACE,cAAC,KAAD,UACE,cAACmC,GAAD,CAEEM,WAAW,EACXC,OACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAK1C,KAAM,EAAX,UACE,cAAC,GAAD,UAAM,mCAASwC,EAAS7D,KAAlB,SACN,cAAC,IAAD,CAAQrE,UAAU,iBAAiBC,IAAKiI,EAAS3D,UACjD,cAAC,GAAD,UAAM,iCAAS2D,EAAS7E,YAE1B,eAAC,IAAD,CAAKqC,KAAM,EAAX,cAAgBjB,IAAQyD,EAASG,WACjC,cAAC,IAAD,CAAK3C,KAAM,EAAX,SAAejB,IAAQyD,EAASI,mBAChC,eAAC,IAAD,CAAK5C,KAAM,EAAX,UAAejB,IAAQyD,EAASK,aAAhC,SARQL,EAAS/D,IAJvB,SAgBGqE,aAAgBN,EAASrB,aAAe,KAfpCqB,EAAS/D,iB,gFC1BtB/D,I,OAAU+E,IAAV/E,OAqDOqI,GAnDG,SAAC,GAIjB,IAJ8D,IAAD,EAA1CC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SACxCC,EAAY,GACZC,EAAgB,GAEb3C,EAAI,EAAGA,GAAC,OAAGuC,QAAH,IAAGA,GAAH,UAAGA,EAAa/F,YAAhB,iBAAG,EAAmBoG,eAAtB,aAAG,EAA4BjC,QAAQX,GAAK,EAAG,CAAC,IAAD,MAC9D0C,EAAUG,KAAV,OAAeN,QAAf,IAAeA,GAAf,UAAeA,EAAa/F,YAA5B,aAAe,EAAmBoG,QAAQ5C,GAAGzB,OAG/C,IAAK,IAAIyB,EAAI,EAAGA,GAAC,OAAGuC,QAAH,IAAGA,GAAH,UAAGA,EAAa/F,YAAhB,iBAAG,EAAmBoG,eAAtB,aAAG,EAA4BjC,QAAQX,GAAK,EAAG,CAAC,IAAD,MAC9D2C,EAAcE,KAAK,IAAIC,KAAJ,OAASP,QAAT,IAASA,GAAT,UAASA,EAAa/F,YAAtB,aAAS,EAAmBoG,QAAQ5C,GAAG+C,WAAWC,sBAGvE,IAAMxG,EAAO,CACXyG,OAAQN,EACRO,SAAU,CACR,CACEC,MAAO,eACP3G,KAAMkG,EACNU,MAAM,EACNC,gBAAiB,UACjBC,YAAa,aAiBnB,OACE,qCACE,eAAC,IAAD,CAAKzJ,UAAU,eAAf,UACE,eAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,cAA3B,UAA0C4I,EAA1C,mBACA,eAAC,IAAD,CAAK5I,UAAU,kBAAf,UACE,eAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,eAA3B,4BAAmD0I,QAAnD,IAAmDA,GAAnD,UAAmDA,EAAa/F,YAAhE,aAAmD,EAAmBiC,OAAtE,OACA,eAAC,GAAD,CAAOvE,MAAO,EAAGL,UAAU,gBAA3B,qBAAoD4I,EAApD,aAAwED,WAG5E,cAAC,KAAD,CAAMhG,KAAMA,EAAM+G,QArBN,CACdC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,aCzBjB1J,GAAgB+E,IAAhB/E,MAAO8E,GAASC,IAATD,KACPE,GAAWC,IAAXD,OA2GO2E,GAzGO,WAAO,IAAD,EAChB9H,EAAW+H,cAAX/H,OACR,EAAoC5C,mBAAS,MAA7C,mBAAO8C,EAAP,KACA,GADA,KAC6BE,EAAyBJ,IAA9CU,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WACA8F,EAAgBnG,EAAyB,CAACN,SAAQE,eAAxDQ,KACFsH,EAAa,OAAGtH,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAYS,KAElC,GAAGR,EAAY,OAAO,cAAC,EAAD,IAEtB,IAEM2E,EAAQ,CACZ,CAAEnD,MAAO,eAAgBR,MAAM,KAAD,OAAOqG,EAAcvF,OAASD,IAAQwF,EAAcvF,QAAUxE,KAAM,cAACgK,GAAA,EAAD,KAClG,CAAE9F,MAAO,OAAQR,MAAOqG,EAAc5F,KAAMnE,KAAM,cAACiK,GAAA,EAAD,KAClD,CAAE/F,MAAO,aAAcR,MAAM,KAAD,OAAOqG,EAAc5B,QAAU5D,IAAQwF,EAAc5B,SAAWnI,KAAM,cAACkK,GAAA,EAAD,KAClG,CAAEhG,MAAO,aAAcR,MAAM,KAAD,OAAOqG,EAActF,WAAaF,IAAQwF,EAActF,YAAczE,KAAM,cAACgK,GAAA,EAAD,KACxG,CAAE9F,MAAO,4BAA6BR,MAAM,KAAD,OAAOa,IAAQwF,EAAcI,YAAY3F,QAAUxE,KAAM,cAACoK,GAAA,EAAD,MAGhGC,EAAe,CACnB,CAAEnG,MAAO,oBAAqBR,MAAOqG,EAAc3B,gBAAiBpI,KAAM,cAACU,EAAA,EAAD,KAC1E,CAAEwD,MAAO,sBAAuBR,MAAOqG,EAAcO,kBAAmBtK,KAAM,cAACW,EAAA,EAAD,KAC9E,CAAEuD,MAAO,kBAAmBR,MAAOqG,EAAcQ,eAAiB,cAACC,GAAA,EAAD,IAAoB,cAACC,GAAA,EAAD,IAAkBzK,KAAM,cAAC0K,GAAA,EAAD,KAC9G,CAAExG,MAAO,eAAgBR,MAAM,KAAD,OAAOa,IAAQwF,EAAcY,cAAgB3K,KAAM,cAAC0K,GAAA,EAAD,KACjF,CAAExG,MAAO,qBAAsBR,MAAM,KAAD,OAAOa,IAAQwF,EAAca,oBAAsB5K,KAAM,cAAC0K,GAAA,EAAD,MAGhG,OACI,eAAC,IAAD,CAAK5K,UAAU,wBAAf,UACI,eAAC,IAAD,CAAKA,UAAU,yBAAf,UACI,eAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,YAA3B,UACKiK,EAAc5G,KADnB,KAC2B4G,EAAcc,KADzC,aAGA,8BACKd,EAAc5G,KADnB,iFAKJ,cAAC,IAAD,CAAQ2H,aAAa,KAAKhL,UAAU,oBAAoBwD,YAAY,qBAAqBC,SAAS,oCAAlG,SA7BM,CAAC,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,KAAM,MA8B5CK,KAAI,SAACmH,GAAD,OAAU,cAAC,GAAD,UAAoBA,GAAPA,QAElC,cAAC,GAAD,CAAWvC,YAAaA,EAAaC,aAAclE,IAAQwF,EAAcvF,OAAQkE,SAAUqB,EAAc5G,OACzG,eAAC,IAAD,CAAKrD,UAAU,kBAAf,UACI,eAAC,IAAD,CAAKA,UAAU,wBAAf,UACI,eAAC,IAAD,CAAKA,UAAU,gCAAf,UACI,eAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,wBAA3B,UACKiK,EAAc5G,KADnB,uBAGA,kEAAqC4G,EAAc5G,WAEtDkE,EAAMzD,KAAI,gBAAE5D,EAAF,EAAEA,KAAMkE,EAAR,EAAQA,MAAOR,EAAf,EAAeA,MAAf,OACP,eAAC,IAAD,CAAK5D,UAAU,aAAf,UACI,eAAC,IAAD,CAAKA,UAAU,kBAAf,UACI,cAAC,GAAD,UAAOE,IACP,cAAC,GAAD,UAAOkE,OAEX,cAAC,GAAD,CAAMpE,UAAU,QAAhB,SAAyB4D,aAIrC,eAAC,IAAD,CAAK5D,UAAU,mBAAf,UACI,eAAC,IAAD,CAAKA,UAAU,gCAAf,UACI,cAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,wBAA3B,8BAGA,yFAEHuK,EAAazG,KAAI,gBAAE5D,EAAF,EAAEA,KAAMkE,EAAR,EAAQA,MAAOR,EAAf,EAAeA,MAAf,OACd,eAAC,IAAD,CAAK5D,UAAU,aAAf,UACI,eAAC,IAAD,CAAKA,UAAU,kBAAf,UACI,cAAC,GAAD,UAAOE,IACP,cAAC,GAAD,UAAOkE,OAEX,cAAC,GAAD,CAAMpE,UAAU,QAAhB,SAAyB4D,gBAKzC,eAAC,IAAD,CAAK5D,UAAU,iBAAf,UACI,cAAC,IAAD,CAAKA,UAAU,YAAf,SACI,eAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,wBAA3B,sBACciK,EAAc5G,KACvBmF,aAAgByB,EAAcpD,kBAGvC,eAAC,IAAD,CAAK7G,UAAU,aAAf,UACI,eAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,uBAA3B,UACKiK,EAAc5G,KADnB,YAGC4G,EAAciB,MAAMpH,KAAI,SAACqH,GAAD,OACrB,eAAC,IAAD,CAAKnL,UAAU,YAAf,UACI,cAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,YAA3B,SACKmL,EAAKC,OAEV,mBAAGhF,KAAM+E,EAAKjK,IAAKyC,OAAO,SAAS0C,IAAI,aAAvC,SACK8E,EAAK9H,SALkB8H,EAAK9H,mBChE7CgI,I,OAlCH,WACR,OACI,sBAAKrL,UAAU,MAAf,UACI,qBAAKA,UAAU,SAAf,SACE,cAAC,EAAD,MAEF,sBAAKA,UAAU,OAAf,UACE,cAAC,IAAD,UACE,qBAAKA,UAAU,SAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsL,KAAK,IAAIC,QAAS,cAAC,GAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,oBAAoBC,QAAS,cAAC,EAAD,MACzC,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,GAAD,MAClC,cAAC,IAAD,CAAOD,KAAK,kBAAkBC,QAAU,cAAC,GAAD,MACxC,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,GAAD,aAKpC,sBAAKvL,UAAU,SAAf,UACC,eAAC,IAAWI,MAAZ,CAAkBC,MAAO,EAAGiG,MAAO,CAAEkF,MAAO,QAASC,UAAW,UAAhE,2CACgC,uBADhC,0BAIA,eAAC,IAAD,WACE,cAAC,IAAD,CAAMnL,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,IAAT,4C,iBC5BDoL,gBAAe,CAC1BC,SAAO,oBACFvK,EAAUE,YAAcF,EAAUuK,SADhC,eAEF7G,EAAcxD,YAAcwD,EAAc6G,SAFxC,K,OCKXC,IAASC,OACL,cAAC,IAAD,UACE,cAAC,IAAD,CAAUC,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGNC,SAASC,eAAe,W","file":"static/js/main.ef7cff11.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.eeb286b2.png\";","import React, {useState, useEffect} from 'react';\r\nimport { Button, Menu, Typography, Avatar } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { HomeOutlined, DollarOutlined, AliwangwangOutlined, FundOutlined, MoneyCollectOutlined, MenuOutlined  } from '@ant-design/icons';\r\n\r\nimport icon from '../images/logo.png';\r\nconst Navbar = () => {\r\n    const [activeMenu, setActiveMenu] = useState(true);\r\n    const [screenSize, setScreenSize] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => setScreenSize(window.innerWidth);\r\n    \r\n        window.addEventListener('resize', handleResize);\r\n    \r\n        handleResize();\r\n    \r\n        return () => window.removeEventListener('resize', handleResize);\r\n      }, []);\r\n\r\n      useEffect(() => {\r\n        if (screenSize <= 780) {\r\n          setActiveMenu(false);\r\n        } else {\r\n          setActiveMenu(true);\r\n        }\r\n      }, [screenSize]);\r\n\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"Logo-container\">\r\n                <Avatar src={icon} size=\"large\" />\r\n                <Typography.Title level={2} className=\"logo\">\r\n                    <Link to=\"/\">CcMarketTracker</Link>\r\n                </Typography.Title>\r\n                <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\r\n            </div>\r\n            {activeMenu && (\r\n            <Menu theme=\"dark\">\r\n                <Menu.Item icon={<HomeOutlined />}>\r\n                    <Link to=\"/\">Home</Link>\r\n                </Menu.Item>\r\n                <Menu.Item icon={<FundOutlined />}>\r\n                    <Link to=\"/Cryptocurrencies\">Cryptocurrencies</Link>\r\n                </Menu.Item>\r\n                <Menu.Item icon={<MoneyCollectOutlined />}>\r\n                     <Link to=\"/exchanges\">Exchanges</Link>\r\n                </Menu.Item>\r\n                {/* <Menu.Item icon={<DollarOutlined />}>\r\n                    <Link to=\"/CryptoDetails\">CryptoDetails</Link>\r\n                </Menu.Item> */}\r\n                <Menu.Item icon={<AliwangwangOutlined />}>\r\n                    <Link to=\"/News\">News</Link>\r\n                </Menu.Item>\r\n              \r\n            </Menu>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nconst Loader = () => (\r\n  <div className=\"loader\">\r\n    <Spin />\r\n  </div>\r\n);\r\n\r\nexport default Loader;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoApiHeaders = {\r\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n    'x-rapidapi-key': 'b57489fef3mshaa152e402e94a21p1b89dajsnc1cbd4f4c3fa'\r\n}\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com'\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\r\n\r\nexport const cryptoApi = createApi({\r\n    reducerPath: 'cryptoApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints: (builder) => ({\r\n        getCryptos: builder.query({\r\n            query: (count) => createRequest(`/coins?limit=${count}`),\r\n        }),\r\n        getExchanges: builder.query({\r\n            query: () => createRequest('/exchanges'),\r\n          }),\r\n        getCryptoDetails: builder.query({\r\n            query: (coinId) => createRequest(`/coin/${coinId}`),\r\n        }),\r\n        getCryptoHistory: builder.query({\r\n            query: ({ coinId, timeperiod }) => createRequest(`coin/${coinId}/history/${timeperiod}`),\r\n        }),\r\n    })\r\n});\r\n\r\nexport const { useGetCryptosQuery, useGetCryptoDetailsQuery, useGetExchangesQuery, useGetCryptoHistoryQuery } = cryptoApi;","import React, { useState, useEffect } from 'react';\r\nimport millify from 'millify';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Row, Col, Input } from 'antd';\r\n\r\nimport Loader from './Loader';\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\n\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n    const count = simplified ? 9 : 100;\r\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n    const [ cryptos, setCryptos ] = useState([]);\r\n    // console.log(cryptos);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    useEffect(() => {\r\n      // setCryptos(cryptosList?.data?.coins);\r\n      const filteredData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\r\n\r\n      setCryptos(filteredData);\r\n    },[cryptosList, searchTerm]);\r\n\r\n    // if(isFetching) return 'Loading...';\r\n    if (isFetching) return <Loader />;\r\n\r\n    return (\r\n      <>\r\n      {!simplified && (\r\n      <div className=\"search-crypto\">\r\n        <Input placeholder=\"Search Cryptocurrency\" onChange={(e) => setSearchTerm(e.target.value)} />\r\n      </div>\r\n       )}\r\n        <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n          {cryptos?.map((currency) => (\r\n            <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n              <Link key={currency.id} to={`/crypto/${currency.id}`}>\r\n                <Card title={`${currency.rank}. ${currency.name}`} extra={<img className=\"crypto-image\" src={currency.iconUrl} />} hoverable>\r\n                  <p>Price: {millify(currency.price)}</p>\r\n                  <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                  <p>Daily Change: {currency.change}%</p>\r\n                </Card>\r\n              </Link>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </>\r\n    );\r\n  };\r\n  \r\n \r\nexport default Cryptocurrencies;\r\n\r\n\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoNewsHeaders = {\r\n    'x-bingapis-sdk': 'true',\r\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n    'x-rapidapi-key': 'b57489fef3mshaa152e402e94a21p1b89dajsnc1cbd4f4c3fa'\r\n}\r\n\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\r\n\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: 'cryptoNewsApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints: (builder) => ({\r\n        getCryptoNews: builder.query({\r\n            query: ({newsCategory, count}) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\r\n        })\r\n    })\r\n});\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;","import React, { useState } from 'react';\r\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\r\nimport moment from 'moment';\r\n\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\r\nimport Loader from './Loader';\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\r\n\r\nconst News = ({ simplified }) => {\r\n    const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\r\n    const { data } = useGetCryptosQuery(100);\r\n    const { data: cryptoNews } = useGetCryptoNewsQuery({newsCategory, count: simplified ? 6 : 12})\r\n\r\n    // console.log(cryptoNews);\r\n\r\n    if(!cryptoNews?.value) return <Loader />;\r\n\r\n    return (\r\n       <Row gutter={[ 24, 24]}>\r\n          {!simplified && (\r\n            <Col span={24}>\r\n                <Select\r\n                   showSearch\r\n                   className=\"select-news\"\r\n                   placeholder=\"Select a Crypto\"\r\n                   optionFilterProp=\"children\"\r\n                   onChange={(value) => setNewsCategory(value)}\r\n                   filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                >\r\n                 <Option value=\"Cryptocurency\">Cryptocurrency</Option>\r\n                   {data?.data?.coins?.map((currency) => <Option value={currency.name}>{currency.name}</Option>)}\r\n              </Select>\r\n           </Col>\r\n          )}\r\n            {cryptoNews.value.map((news, i) => (\r\n               <Col xs={24} sm={12} lg={8} key={i}>\r\n                   <Card hoverable className=\"news-card\">\r\n                       <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                           <div className=\"news-image-container\">\r\n                               <Title className=\"news-title\" level={4}>{news.name}</Title>\r\n                               <img style={{ maxWidth: '200px', maxHeight: '100px'}} src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\r\n                           </div>\r\n                           <p>{news.description.length > 100 ? `${news.description.substring(0, 100)}...` : news.description}</p>\r\n                           <div className=\"provider-container\">\r\n                               <div>\r\n                                   <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\r\n                                   <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n                               </div>\r\n                                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n                           </div>\r\n                       </a>\r\n                   </Card>\r\n               </Col>\r\n            ))}\r\n       </Row>\r\n    )\r\n}\r\n\r\nexport default News\r\n","\r\nimport React from 'react';\r\nimport millify from 'millify';\r\nimport { Typography, Row, Col, Statistic } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from './Loader';\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport Cryptocurrencies from './Cryptocurrencies';\r\nimport News from './News';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Homepage = () => {\r\n  const { data, isFetching } = useGetCryptosQuery(9);\r\n  // console.log(data);\r\n  const globalStats = data?.data?.stats;\r\n\r\n  // if (isFetching) return 'loading...';\r\n  if (isFetching) return <Loader />;\r\n\r\nreturn (\r\n  <>\r\n    <Title level={2} className=\"heading\">Global Crypto Stats</Title>\r\n    <Row>\r\n      <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\r\n      <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} /></Col>\r\n      <Col span={12}><Statistic title=\"Total Market Cap:\" value={`$${millify(globalStats.totalMarketCap)}`} /></Col>\r\n      <Col span={12}><Statistic title=\"Total 24h Volume\" value={`$${millify(globalStats.total24hVolume)}`} /></Col>\r\n      <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\r\n      <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)} /></Col>\r\n    </Row>\r\n    <div className=\"home-heading-container\">\r\n      <Title level={2} className=\"home-title\">Top 9 Cryptos In The World</Title>\r\n      <Title level={3} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show more</Link></Title>\r\n    </div>\r\n    <Cryptocurrencies simplified />\r\n    <div className=\"home-heading-container\">\r\n      <Title level={2} className=\"home-title\">Latest Crypto News</Title>\r\n      <Title level={3}><Link to=\"/news\">Show more</Link></Title>\r\n    </div>\r\n    <News simplified />\r\n  </>\r\n);\r\n};\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\r\nimport HTMLReactParser from 'html-react-parser';\r\n\r\nimport { useGetExchangesQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst Exchanges = () => {\r\n  const { data, isFetching } = useGetExchangesQuery();\r\n  const exchangesList = data?.data?.exchanges;\r\n\r\n  // if (isFetching) return 'Loading...';\r\n  if (isFetching) return <Loader />;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={6}>Exchanges</Col>\r\n        <Col span={6}>24h Trade Volume</Col>\r\n        <Col span={6}>Markets</Col>\r\n        <Col span={6}>Change</Col>\r\n      </Row>\r\n      <Row>\r\n        {exchangesList.map((exchange) => (\r\n          <Col span={24}>\r\n            <Collapse>\r\n              <Panel\r\n                key={exchange.id}\r\n                showArrow={false}\r\n                header={(\r\n                  <Row key={exchange.id}>\r\n                    <Col span={6}>\r\n                      <Text><strong>{exchange.rank}.</strong></Text>\r\n                      <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\r\n                      <Text><strong>{exchange.name}</strong></Text>\r\n                    </Col>\r\n                    <Col span={6}>${millify(exchange.volume)}</Col>\r\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                  </Row>\r\n                  )}\r\n              >\r\n                {HTMLReactParser(exchange.description || '')}\r\n              </Panel>\r\n            </Collapse>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Exchanges;","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport Chart from 'chart.js/auto'\r\nimport { Col, Row, Typography } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price);\r\n  }\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\r\n  }\r\n\r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: 'Price In USD',\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: '#0071bd',\r\n        borderColor: '#0071bd',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\r\n        <Col className=\"price-container\">\r\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\r\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;","import React, { useState }  from 'react';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { useParams } from 'react-router-dom';\r\nimport millify from 'millify';\r\nimport { Col, Row, Typography, Select } from 'antd';\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\n\r\nimport Loader from './Loader';\r\n\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\r\nimport LineChart from './LineChart';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n    const { coinId } = useParams();\r\n    const [timeperiod, setTimeperiod] = useState('7d');\r\n    const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n    const { data: coinHistory } = useGetCryptoHistoryQuery({coinId, timeperiod});\r\n    const cryptoDetails = data?.data?.coin;\r\n\r\n    if(isFetching) return <Loader />;\r\n\r\n    const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n    const stats = [\r\n      { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n      { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n      { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n      { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n      { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n    ];\r\n  \r\n    const genericStats = [\r\n      { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n      { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n      { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n      { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n      { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    ];\r\n    \r\n   return(\r\n       <Col className=\"coin-detail-container\">\r\n           <Col className=\"coin-heading-container\">\r\n               <Title level={2} className=\"coin-name\">\r\n                   {cryptoDetails.name} ({cryptoDetails.slug}) Price\r\n               </Title>\r\n               <p>\r\n                   {cryptoDetails.name} Live price in Us dollars.\r\n                   View Value Statistics, market Cap and Supply.\r\n               </p>\r\n           </Col>\r\n           <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Time Period\" onChange=\"{(value) => setTimePeriod(value)}\">\r\n            {time.map((date) => <Option key={date}>{date}</Option>)}\r\n           </Select>\r\n           <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\r\n           <Col className=\"stats-container\">\r\n               <Col className=\"coin-value-statistics\">\r\n                   <Col className=\"coin-value-statistics-heading\">\r\n                       <Title level={3} className=\"coin-detailes-heading\">\r\n                           {cryptoDetails.name} Value Statistics\r\n                       </Title>\r\n                       <p>An Overview showing the stats of {cryptoDetails.name}</p>\r\n                   </Col>\r\n                   {stats.map(({icon, title, value}) => (\r\n                       <Col className=\"coin-stats\">\r\n                           <Col className=\"coin-stats-name\">\r\n                               <Text>{icon}</Text>\r\n                               <Text>{title}</Text>\r\n                           </Col>\r\n                           <Text className=\"stats\">{value}</Text>\r\n                       </Col>\r\n                   ))}\r\n               </Col>\r\n               <Col className=\"other-stats-info\">\r\n                   <Col className=\"coin-value-statistics-heading\">\r\n                       <Title level={3} className=\"coin-detailes-heading\">\r\n                           Other Statistics\r\n                       </Title>\r\n                       <p>An Overview showing the stats of all cryptocurrencies</p>\r\n                   </Col>\r\n                   {genericStats.map(({icon, title, value}) => (\r\n                       <Col className=\"coin-stats\">\r\n                           <Col className=\"coin-stats-name\">\r\n                               <Text>{icon}</Text>\r\n                               <Text>{title}</Text>\r\n                           </Col>\r\n                           <Text className=\"stats\">{value}</Text>\r\n                       </Col>\r\n                   ))}\r\n               </Col>\r\n           </Col>\r\n           <Col className=\"coin-desc-link\">\r\n               <Row className=\"coin-desc\">\r\n                   <Title level={3} className=\"coin-details-headings\">\r\n                       Whats is {cryptoDetails.name}\r\n                       {HTMLReactParser(cryptoDetails.description)}\r\n                   </Title>\r\n               </Row>\r\n               <Col className=\"coin-links\">\r\n                   <Title level={3} className=\"coin-details-heading\">\r\n                       {cryptoDetails.name} Links\r\n                   </Title>\r\n                   {cryptoDetails.links.map((link) => (\r\n                       <Row className=\"coin-link\" key={link.name}>\r\n                           <Title level={5} className=\"link-name\">\r\n                               {link.type}\r\n                           </Title>\r\n                           <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                               {link.name}\r\n                           </a>\r\n                       </Row>\r\n                   ))}\r\n               </Col>\r\n           </Col>\r\n       </Col>\r\n   )\r\n}\r\n\r\nexport default CryptoDetails;\r\n","import React from 'react';\nimport {Routes, Route, Link } from 'react-router-dom';\nimport { Layout, Typography, Space } from 'antd';\n\nimport { Navbar, Cryptocurrencies, CryptoDetails, Homepage, News, Exchanges } from './components';\nimport './App.css';\n\nconst App = () => {\n    return (\n        <div className=\"app\">\n            <div className=\"navbar\">\n              <Navbar />\n            </div>\n            <div className=\"main\">\n              <Layout>\n                <div className=\"routes\">\n                  <Routes>\n                    <Route path=\"/\" element={<Homepage />} />\n                    <Route path=\"/Cryptocurrencies\" element={<Cryptocurrencies />} />\n                    <Route path=\"/Exchanges\" element={<Exchanges />} />\n                    <Route path=\"/crypto/:coinId\" element={ <CryptoDetails /> } />\n                    <Route path=\"/News\" element={<News />} />\n                  </Routes>\n                </div>\n              </Layout>\n    \n             <div className=\"footer\" >\n              <Typography.Title level={5} style={{ color: 'white', textAlign: 'center'}}>\n                CryptoCurrency Market Tracker <br />\n                @All Rights Reserved\n              </Typography.Title>\n              <Space>\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/\">Cryptocurrencies</Link>\n              </Space>\n             </div>\n           </div>\n        </div>\n    )\n}\n\nexport default App\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport { cryptoApi } from '../services/cryptoApi';\r\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n    },\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './app/store';\nimport 'antd/dist/antd.css';\n\n\n\nReactDOM.render(\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}